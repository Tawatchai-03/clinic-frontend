// src/pages/Register.jsx
import { useEffect, useMemo, useState } from "react";
import { useLocation, Link, useNavigate } from "react-router-dom";
import "./Register.css";
import hospitalHero from "../assets/hospital-hero.png";

export default function Register() {
  const query = new URLSearchParams(useLocation().search);
  const role = query.get("role") || "patient";
  const navigate = useNavigate();

  // --- states ---
  const [form, setForm] = useState({
    firstName: "",
    lastName: "",
    email: "",
    phone: "",
    password: "",
    confirm: "",
    // patient only
    birthDate: "",
    gender: "",
    address1: "",
    district: "",
    province: "",
    postalCode: "",
    // doctor only
    specialtyId: "",
  });

  const [specialties, setSpecialties] = useState([]);
  const [loadingSp, setLoadingSp] = useState(false);
  const [submitting, setSubmitting] = useState(false);
  const [msg, setMsg] = useState("");

  const API = useMemo(() => import.meta.env.VITE_API_URL?.replace(/\/+$/, ""), []);

  // ‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≤‡∏Ç‡∏≤‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ï‡∏≠‡∏ô‡πÄ‡∏õ‡πá‡∏ô‡∏´‡∏°‡∏≠
  useEffect(() => {
    if (role !== "doctor") return;
    let aborted = false;

    async function loadSpecialties() {
      try {
        setLoadingSp(true);
        const res = await fetch(`${API}/api/specialties`);
        if (!res.ok) throw new Error(`‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≤‡∏Ç‡∏≤‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (${res.status})`);
        const data = await res.json();
        if (!aborted) setSpecialties(data || []);
      } catch (e) {
        console.error(e);
        if (!aborted) setMsg("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏™‡∏≤‡∏Ç‡∏≤‡πÅ‡∏û‡∏ó‡∏¢‡πå");
      } finally {
        if (!aborted) setLoadingSp(false);
      }
    }

    loadSpecialties();
    return () => { aborted = true; };
  }, [API, role]);

  const onChange = (key) => (e) => {
    setForm((s) => ({ ...s, [key]: e.target.value }));
  };

  const validate = () => {
    if (form.password.length < 6) return "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ï‡πâ‡∏≠‡∏á‡∏¢‡∏≤‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á‡∏ô‡πâ‡∏≠‡∏¢ 6 ‡∏ï‡∏±‡∏ß‡∏≠‡∏±‡∏Å‡∏©‡∏£";
    if (form.password !== form.confirm) return "‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ô";
    if (role === "doctor" && !form.specialtyId) return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç";
    if (role === "patient") {
      if (!form.birthDate) return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î";
      if (!form.gender) return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏®";
      if (!form.address1 || !form.district || !form.province || !form.postalCode) {
        return "‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ñ‡πâ‡∏ß‡∏ô";
      }
      if (!/^\d{5}$/.test(form.postalCode)) return "‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç 5 ‡∏´‡∏•‡∏±‡∏Å";
    }
    return "";
  };

  const submit = async (e) => {
    e.preventDefault();
    setMsg("");
    const v = validate();
    if (v) {
      setMsg(v);
      return;
    }

    // ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏° payload
    const base = {
      role,
      firstName: form.firstName.trim(),
      lastName: form.lastName.trim(),
      email: form.email.trim(),
      phone: form.phone.trim(),
      password: form.password,
    };

    let payload = base;
    if (role === "patient") {
      payload = {
        ...base,
        birthDate: form.birthDate,
        gender: form.gender,         // 'male' | 'female'
        address: {
          line1: form.address1.trim(),
          district: form.district.trim(),
          province: form.province.trim(),
          postalCode: form.postalCode.trim(),
        },
      };
    } else {
      payload = {
        ...base,
        specialtyId: Number(form.specialtyId),
      };
    }

    try {
      setSubmitting(true);
      const res = await fetch(`${API}/api/register`, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload),
      });

      if (!res.ok) {
        const err = await safeJson(res);
        const msg = err?.message || `‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à (${res.status})`;
        throw new Error(msg);
      }

      setMsg("‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏û‡∏≤‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‚Ä¶");
      // ‡∏´‡∏ô‡πà‡∏ß‡∏á‡∏™‡∏±‡πâ‡∏ô ‡πÜ ‡πÉ‡∏´‡πâ‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏´‡πá‡∏ô‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° ‡πÅ‡∏•‡πâ‡∏ß‡∏Ñ‡πà‡∏≠‡∏¢‡∏û‡∏≤‡πÑ‡∏õ login
      setTimeout(() => navigate("/login"), 900);
    } catch (err) {
      console.error(err);
      setMsg(String(err.message || err));
    } finally {
      setSubmitting(false);
    }
  };

  return (
    <div className="register">
      <div className="register__container">
        {/* ‡∏ã‡πâ‡∏≤‡∏¢ */}
        <aside className="register__left">
          <div className="register__hero">
            <h2>‡∏¢‡∏¥‡∏ô‡∏î‡∏µ‡∏ï‡πâ‡∏≠‡∏ô‡∏£‡∏±‡∏ö‡∏™‡∏π‡πà ClinicCare</h2>
            <p>‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≠‡∏á‡∏ô‡∏±‡∏î‡∏û‡∏ö‡πÅ‡∏û‡∏ó‡∏¢‡πå‡πÅ‡∏•‡∏∞‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏∏‡∏Ç‡∏†‡∏≤‡∏û‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì</p>
          </div>
        </aside>

        {/* ‡∏Å‡∏•‡∏≤‡∏á: ‡∏Å‡∏≤‡∏£‡πå‡∏î‡∏™‡∏°‡∏±‡∏Ñ‡∏£ */}
        <div className="register__card">
          <div className="register__brand">
            <span className="register__logo" aria-hidden="true">üåø</span>
            <h1>‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å</h1>
          </div>

          <p className="register__subtitle">
            {role === "doctor" ? "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏û‡∏ó‡∏¢‡πå" : "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏ô‡πÑ‡∏Ç‡πâ"}
          </p>

          {msg && (
            <div
              style={{
                marginBottom: 12,
                padding: "10px 12px",
                borderRadius: 10,
                border: "1px solid #c8e6c9",
                background: "#f1f8e9",
                color: "#1b5e20",
                fontSize: 14,
              }}
            >
              {msg}
            </div>
          )}

          <form className="register__form" onSubmit={submit}>
            {/* ‡∏ä‡∏∑‡πà‡∏≠-‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏• */}
            <div className="form-group">
              <label>‡∏ä‡∏∑‡πà‡∏≠</label>
              <input
                type="text"
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ä‡∏∑‡πà‡∏≠"
                required
                value={form.firstName}
                onChange={onChange("firstName")}
              />
            </div>
            <div className="form-group">
              <label>‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•</label>
              <input
                type="text"
                placeholder="‡∏Å‡∏£‡∏≠‡∏Å‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•"
                required
                value={form.lastName}
                onChange={onChange("lastName")}
              />
            </div>

            {/* ‡∏≠‡∏µ‡πÄ‡∏°‡∏•-‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£ */}
            <div className="form-group full">
              <label>‡∏≠‡∏µ‡πÄ‡∏°‡∏•</label>
              <input
                type="email"
                placeholder="example@mail.com"
                required
                value={form.email}
                onChange={onChange("email")}
              />
            </div>
            <div className="form-group full">
              <label>‡πÄ‡∏ö‡∏≠‡∏£‡πå‡πÇ‡∏ó‡∏£</label>
              <input
                type="tel"
                placeholder="0812345678"
                required
                value={form.phone}
                onChange={onChange("phone")}
              />
            </div>

            {/* ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏ô‡πÑ‡∏Ç‡πâ: ‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î / ‡πÄ‡∏û‡∏® + ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà */}
            {role === "patient" && (
              <>
                <div className="form-group">
                  <label>‡∏ß‡∏±‡∏ô‡πÄ‡∏Å‡∏¥‡∏î</label>
                  <input
                    type="date"
                    required
                    value={form.birthDate}
                    onChange={onChange("birthDate")}
                  />
                </div>
                <div className="form-group">
                  <label>‡πÄ‡∏û‡∏®</label>
                  <select
                    required
                    value={form.gender}
                    onChange={onChange("gender")}
                  >
                    <option value="" disabled>-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÄ‡∏û‡∏® --</option>
                    <option value="male">‡∏ä‡∏≤‡∏¢</option>
                    <option value="female">‡∏´‡∏ç‡∏¥‡∏á</option>
                  </select>
                </div>

                <div className="form-group full">
                  <label>‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà</label>
                  <input
                    type="text"
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô 99/9 ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏Å‡∏£‡∏µ‡∏ô‡∏û‡∏≤‡∏£‡πå‡∏Ñ"
                    required
                    value={form.address1}
                    onChange={onChange("address1")}
                  />
                </div>
                <div className="form-group">
                  <label>‡πÄ‡∏Ç‡∏ï/‡∏≠‡∏≥‡πÄ‡∏†‡∏≠</label>
                  <input
                    type="text"
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏•‡∏≤‡∏î‡∏û‡∏£‡πâ‡∏≤‡∏ß"
                    required
                    value={form.district}
                    onChange={onChange("district")}
                  />
                </div>
                <div className="form-group">
                  <label>‡∏à‡∏±‡∏á‡∏´‡∏ß‡∏±‡∏î</label>
                  <input
                    type="text"
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô ‡∏Å‡∏£‡∏∏‡∏á‡πÄ‡∏ó‡∏û‡∏°‡∏´‡∏≤‡∏ô‡∏Ñ‡∏£"
                    required
                    value={form.province}
                    onChange={onChange("province")}
                  />
                </div>
                <div className="form-group">
                  <label>‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå</label>
                  <input
                    type="text"
                    inputMode="numeric"
                    pattern="\d{5}"
                    placeholder="‡πÄ‡∏ä‡πà‡∏ô 10230"
                    title="‡∏Å‡∏£‡∏≠‡∏Å‡∏£‡∏´‡∏±‡∏™‡πÑ‡∏õ‡∏£‡∏©‡∏ì‡∏µ‡∏¢‡πå 5 ‡∏´‡∏•‡∏±‡∏Å"
                    required
                    value={form.postalCode}
                    onChange={onChange("postalCode")}
                  />
                </div>
              </>
            )}

            {/* ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏´‡∏°‡∏≠: ‡∏™‡∏≤‡∏Ç‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç */}
            {role === "doctor" && (
              <div className="form-group full">
                <label>‡∏™‡∏≤‡∏Ç‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡πÄ‡∏ä‡∏µ‡πà‡∏¢‡∏ß‡∏ä‡∏≤‡∏ç</label>
                <select
                  required
                  value={form.specialtyId}
                  onChange={onChange("specialtyId")}
                  disabled={loadingSp}
                >
                  <option value="" disabled>
                    {loadingSp ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‚Ä¶" : "-- ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏™‡∏≤‡∏Ç‡∏≤ --"}
                  </option>
                  {specialties.map((sp) => (
                    <option key={sp.id} value={sp.id}>
                      {sp.name_th || sp.name || sp.code}
                    </option>
                  ))}
                </select>
              </div>
            )}

            {/* ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô */}
            <div className="form-group">
              <label>‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
              <input
                type="password"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                required
                value={form.password}
                onChange={onChange("password")}
              />
            </div>
            <div className="form-group">
              <label>‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô</label>
              <input
                type="password"
                placeholder="‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢‚Ä¢"
                required
                value={form.confirm}
                onChange={onChange("confirm")}
              />
            </div>

            <button
              type="submit"
              className="btn btn--primary full"
              disabled={submitting}
            >
              {submitting ? "‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏°‡∏±‡∏Ñ‡∏£‚Ä¶" : "‡∏™‡∏°‡∏±‡∏Ñ‡∏£‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å"}
            </button>
          </form>

          <p className="register__footer">
            ‡∏°‡∏µ‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡πÅ‡∏•‡πâ‡∏ß? <Link to="/login">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</Link>
          </p>
        </div>

        {/* ‡∏Ç‡∏ß‡∏≤: ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û/‡πÅ‡∏ú‡∏á */}
        <aside className="register__rightPanel" aria-hidden="true">
          <img src={hospitalHero} alt="ClinicCare" className="register__image" />
        </aside>
      </div>
    </div>
  );
}

// helper: parse json safely
async function safeJson(res) {
  try {
    return await res.json();
  } catch {
    return null;
  }
}
